###############################################################################
#                                                                             #
# IAR C/C++ Compiler V8.10.1.10194/W32 for 8051         06/Apr/2016  08:25:44 #
# Copyright 2004-2011 IAR Systems AB.                                         #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  banked                                             #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data_rom                                           #
#    Dptr setup         =  1,16                                               #
#    Source file        =  E:\StudyData\zigbee\2_Íø·ä¿Æ¼¼\Ê¾Àý³ÌÐò\2.×éÍøÊµÑé #
#                          \9¡¢ÍøÂçÍ¨ÐÅÊµÑé£¨µ¥²¥¡¢×é²¥¡¢¹ã²¥£©\3¡¢¹ã²¥\Proje #
#                          cts\zstack\Samples\SampleApp\Source\SampleApp.c    #
#    Command line       =  -f E:\StudyData\zigbee\2_Íø·ä¿Æ¼¼\Ê¾Àý³ÌÐò\2.×éÍøÊ #
#                          µÑé\9¡¢ÍøÂçÍ¨ÐÅÊµÑé£¨µ¥²¥¡¢×é²¥¡¢¹ã²¥£©\3¡¢¹ã²¥\Pr #
#                          ojects\zstack\Samples\SampleApp\CC2530DB\..\..\..\ #
#                          Tools\CC2530DB\f8wCoord.cfg (-DCPU32MHZ            #
#                          -DROOT=__near_func -DMAC_CFG_APP_PENDING_QUEUE=TRU #
#                          E -DMAC_CFG_TX_DATA_MAX=5 -DMAC_CFG_TX_MAX=8       #
#                          -DMAC_CFG_RX_MAX=5 -DZDO_COORDINATOR -DRTR_NWK)    #
#                          -f E:\StudyData\zigbee\2_Íø·ä¿Æ¼¼\Ê¾Àý³ÌÐò\2.×éÍøÊ #
#                          µÑé\9¡¢ÍøÂçÍ¨ÐÅÊµÑé£¨µ¥²¥¡¢×é²¥¡¢¹ã²¥£©\3¡¢¹ã²¥\Pr #
#                          ojects\zstack\Samples\SampleApp\CC2530DB\..\..\..\ #
#                          Tools\CC2530DB\f8wConfig.cfg (-DZIGBEEPRO          #
#                          -DSECURE=0 -DZG_SECURE_DYNAMIC=0 -DREFLECTOR       #
#                          -DDEFAULT_CHANLIST=0x00000800                      #
#                          -DZDAPP_CONFIG_PAN_ID=0xFF00                       #
#                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MA #
#                          SK=0x007F -DBEACON_REQUEST_DELAY=100               #
#                          -DBEACON_REQ_DELAY_MASK=0x00FF                     #
#                          -DLINK_STATUS_JITTER_MASK=0x007F                   #
#                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_PO #
#                          LLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7             #
#                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3    #
#                          -DNWK_MAX_DATA_RETRIES=2                           #
#                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9         #
#                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40           #
#                          -DNWK_MAX_BINDING_ENTRIES=4                        #
#                          -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01,  #
#                          0x03, 0x05, 0x07, 0x09, 0x0B, 0x0D, 0x0F, 0x00,    #
#                          0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C, 0x0D}"         #
#                          -DMAC_MAX_FRAME_SIZE=116                           #
#                          -DZDNWKMGR_MIN_TRANSMISSIONS=20 "-DCONST=const     #
#                          __code" -DGENERIC=__generic                        #
#                          -DRFD_RCVC_ALWAYS_ON=FALSE -DPOLL_RATE=1000        #
#                          -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100)   #
#                          -DREJOIN_POLL_RATE=440 E:\StudyData\zigbee\2_Íø·ä¿ #
#                          Æ¼¼\Ê¾Àý³ÌÐò\2.×éÍøÊµÑé\9¡¢ÍøÂçÍ¨ÐÅÊµÑé£¨µ¥²¥¡¢×é² #
#                          ¥¡¢¹ã²¥£©\3¡¢¹ã²¥\Projects\zstack\Samples\SampleAp #
#                          p\Source\SampleApp.c -D BUILD_ALL_DEVICES -D       #
#                          HOLD_AUTO_START -D LCD_SUPPORTED -D                #
#                          HAL_UART=FALSE -lC E:\StudyData\zigbee\2_Íø·ä¿Æ¼¼\ #
#                          Ê¾Àý³ÌÐò\2.×éÍøÊµÑé\9¡¢ÍøÂçÍ¨ÐÅÊµÑé£¨µ¥²¥¡¢×é²¥¡¢¹ #
#                          ã²¥£©\3¡¢¹ã²¥\Projects\zstack\Samples\SampleApp\CC #
#                          2530DB\DemoEB\List\ -lA E:\StudyData\zigbee\2_Íø·ä #
#                          ¿Æ¼¼\Ê¾Àý³ÌÐò\2.×éÍøÊµÑé\9¡¢ÍøÂçÍ¨ÐÅÊµÑé£¨µ¥²¥¡¢×é #
#                          ²¥¡¢¹ã²¥£©\3¡¢¹ã²¥\Projects\zstack\Samples\SampleA #
#                          pp\CC2530DB\DemoEB\List\ --diag_suppress           #
#                          Pe001,Pa010 -o E:\StudyData\zigbee\2_Íø·ä¿Æ¼¼\Ê¾Àý #
#                          ³ÌÐò\2.×éÍøÊµÑé\9¡¢ÍøÂçÍ¨ÐÅÊµÑé£¨µ¥²¥¡¢×é²¥¡¢¹ã²¥£ #
#                          ©\3¡¢¹ã²¥\Projects\zstack\Samples\SampleApp\CC2530 #
#                          DB\DemoEB\Obj\ -e --no_code_motion --debug         #
#                          --core=plain --dptr=16,1 --data_model=large        #
#                          --code_model=banked --calling_convention=xdata_ree #
#                          ntrant --place_constants=data_rom                  #
#                          --nr_virtual_regs 16 -I E:\StudyData\zigbee\2_Íø·ä #
#                          ¿Æ¼¼\Ê¾Àý³ÌÐò\2.×éÍøÊµÑé\9¡¢ÍøÂçÍ¨ÐÅÊµÑé£¨µ¥²¥¡¢×é #
#                          ²¥¡¢¹ã²¥£©\3¡¢¹ã²¥\Projects\zstack\Samples\SampleA #
#                          pp\CC2530DB\ -I E:\StudyData\zigbee\2_Íø·ä¿Æ¼¼\Ê¾À #
#                          ý³ÌÐò\2.×éÍøÊµÑé\9¡¢ÍøÂçÍ¨ÐÅÊµÑé£¨µ¥²¥¡¢×é²¥¡¢¹ã²¥ #
#                          £©\3¡¢¹ã²¥\Projects\zstack\Samples\SampleApp\CC253 #
#                          0DB\..\Source\ -I E:\StudyData\zigbee\2_Íø·ä¿Æ¼¼\Ê #
#                          ¾Àý³ÌÐò\2.×éÍøÊµÑé\9¡¢ÍøÂçÍ¨ÐÅÊµÑé£¨µ¥²¥¡¢×é²¥¡¢¹ã #
#                          ²¥£©\3¡¢¹ã²¥\Projects\zstack\Samples\SampleApp\CC2 #
#                          530DB\..\..\..\ZMain\TI2530DB\ -I                  #
#                          E:\StudyData\zigbee\2_Íø·ä¿Æ¼¼\Ê¾Àý³ÌÐò\2.×éÍøÊµÑé #
#                          \9¡¢ÍøÂçÍ¨ÐÅÊµÑé£¨µ¥²¥¡¢×é²¥¡¢¹ã²¥£©\3¡¢¹ã²¥\Proje #
#                          cts\zstack\Samples\SampleApp\CC2530DB\..\..\..\..\ #
#                          ..\Components\hal\include\ -I                      #
#                          E:\StudyData\zigbee\2_Íø·ä¿Æ¼¼\Ê¾Àý³ÌÐò\2.×éÍøÊµÑé #
#                          \9¡¢ÍøÂçÍ¨ÐÅÊµÑé£¨µ¥²¥¡¢×é²¥¡¢¹ã²¥£©\3¡¢¹ã²¥\Proje #
#                          cts\zstack\Samples\SampleApp\CC2530DB\..\..\..\..\ #
#                          ..\Components\hal\target\CC2530EB\ -I              #
#                          E:\StudyData\zigbee\2_Íø·ä¿Æ¼¼\Ê¾Àý³ÌÐò\2.×éÍøÊµÑé #
#                          \9¡¢ÍøÂçÍ¨ÐÅÊµÑé£¨µ¥²¥¡¢×é²¥¡¢¹ã²¥£©\3¡¢¹ã²¥\Proje #
#                          cts\zstack\Samples\SampleApp\CC2530DB\..\..\..\..\ #
#                          ..\Components\mac\include\ -I                      #
#                          E:\StudyData\zigbee\2_Íø·ä¿Æ¼¼\Ê¾Àý³ÌÐò\2.×éÍøÊµÑé #
#                          \9¡¢ÍøÂçÍ¨ÐÅÊµÑé£¨µ¥²¥¡¢×é²¥¡¢¹ã²¥£©\3¡¢¹ã²¥\Proje #
#                          cts\zstack\Samples\SampleApp\CC2530DB\..\..\..\..\ #
#                          ..\Components\mac\high_level\ -I                   #
#                          E:\StudyData\zigbee\2_Íø·ä¿Æ¼¼\Ê¾Àý³ÌÐò\2.×éÍøÊµÑé #
#                          \9¡¢ÍøÂçÍ¨ÐÅÊµÑé£¨µ¥²¥¡¢×é²¥¡¢¹ã²¥£©\3¡¢¹ã²¥\Proje #
#                          cts\zstack\Samples\SampleApp\CC2530DB\..\..\..\..\ #
#                          ..\Components\mac\low_level\srf04\ -I              #
#                          E:\StudyData\zigbee\2_Íø·ä¿Æ¼¼\Ê¾Àý³ÌÐò\2.×éÍøÊµÑé #
#                          \9¡¢ÍøÂçÍ¨ÐÅÊµÑé£¨µ¥²¥¡¢×é²¥¡¢¹ã²¥£©\3¡¢¹ã²¥\Proje #
#                          cts\zstack\Samples\SampleApp\CC2530DB\..\..\..\..\ #
#                          ..\Components\mac\low_level\srf04\single_chip\ -I  #
#                          E:\StudyData\zigbee\2_Íø·ä¿Æ¼¼\Ê¾Àý³ÌÐò\2.×éÍøÊµÑé #
#                          \9¡¢ÍøÂçÍ¨ÐÅÊµÑé£¨µ¥²¥¡¢×é²¥¡¢¹ã²¥£©\3¡¢¹ã²¥\Proje #
#                          cts\zstack\Samples\SampleApp\CC2530DB\..\..\..\..\ #
#                          ..\Components\mt\ -I E:\StudyData\zigbee\2_Íø·ä¿Æ¼ #
#                          ¼\Ê¾Àý³ÌÐò\2.×éÍøÊµÑé\9¡¢ÍøÂçÍ¨ÐÅÊµÑé£¨µ¥²¥¡¢×é²¥¡ #
#                          ¢¹ã²¥£©\3¡¢¹ã²¥\Projects\zstack\Samples\SampleApp\ #
#                          CC2530DB\..\..\..\..\..\Components\osal\include\   #
#                          -I E:\StudyData\zigbee\2_Íø·ä¿Æ¼¼\Ê¾Àý³ÌÐò\2.×éÍøÊ #
#                          µÑé\9¡¢ÍøÂçÍ¨ÐÅÊµÑé£¨µ¥²¥¡¢×é²¥¡¢¹ã²¥£©\3¡¢¹ã²¥\Pr #
#                          ojects\zstack\Samples\SampleApp\CC2530DB\..\..\..\ #
#                          ..\..\Components\services\saddr\ -I                #
#                          E:\StudyData\zigbee\2_Íø·ä¿Æ¼¼\Ê¾Àý³ÌÐò\2.×éÍøÊµÑé #
#                          \9¡¢ÍøÂçÍ¨ÐÅÊµÑé£¨µ¥²¥¡¢×é²¥¡¢¹ã²¥£©\3¡¢¹ã²¥\Proje #
#                          cts\zstack\Samples\SampleApp\CC2530DB\..\..\..\..\ #
#                          ..\Components\services\sdata\ -I                   #
#                          E:\StudyData\zigbee\2_Íø·ä¿Æ¼¼\Ê¾Àý³ÌÐò\2.×éÍøÊµÑé #
#                          \9¡¢ÍøÂçÍ¨ÐÅÊµÑé£¨µ¥²¥¡¢×é²¥¡¢¹ã²¥£©\3¡¢¹ã²¥\Proje #
#                          cts\zstack\Samples\SampleApp\CC2530DB\..\..\..\..\ #
#                          ..\Components\stack\af\ -I                         #
#                          E:\StudyData\zigbee\2_Íø·ä¿Æ¼¼\Ê¾Àý³ÌÐò\2.×éÍøÊµÑé #
#                          \9¡¢ÍøÂçÍ¨ÐÅÊµÑé£¨µ¥²¥¡¢×é²¥¡¢¹ã²¥£©\3¡¢¹ã²¥\Proje #
#                          cts\zstack\Samples\SampleApp\CC2530DB\..\..\..\..\ #
#                          ..\Components\stack\nwk\ -I                        #
#                          E:\StudyData\zigbee\2_Íø·ä¿Æ¼¼\Ê¾Àý³ÌÐò\2.×éÍøÊµÑé #
#                          \9¡¢ÍøÂçÍ¨ÐÅÊµÑé£¨µ¥²¥¡¢×é²¥¡¢¹ã²¥£©\3¡¢¹ã²¥\Proje #
#                          cts\zstack\Samples\SampleApp\CC2530DB\..\..\..\..\ #
#                          ..\Components\stack\sapi\ -I                       #
#                          E:\StudyData\zigbee\2_Íø·ä¿Æ¼¼\Ê¾Àý³ÌÐò\2.×éÍøÊµÑé #
#                          \9¡¢ÍøÂçÍ¨ÐÅÊµÑé£¨µ¥²¥¡¢×é²¥¡¢¹ã²¥£©\3¡¢¹ã²¥\Proje #
#                          cts\zstack\Samples\SampleApp\CC2530DB\..\..\..\..\ #
#                          ..\Components\stack\sec\ -I                        #
#                          E:\StudyData\zigbee\2_Íø·ä¿Æ¼¼\Ê¾Àý³ÌÐò\2.×éÍøÊµÑé #
#                          \9¡¢ÍøÂçÍ¨ÐÅÊµÑé£¨µ¥²¥¡¢×é²¥¡¢¹ã²¥£©\3¡¢¹ã²¥\Proje #
#                          cts\zstack\Samples\SampleApp\CC2530DB\..\..\..\..\ #
#                          ..\Components\stack\sys\ -I                        #
#                          E:\StudyData\zigbee\2_Íø·ä¿Æ¼¼\Ê¾Àý³ÌÐò\2.×éÍøÊµÑé #
#                          \9¡¢ÍøÂçÍ¨ÐÅÊµÑé£¨µ¥²¥¡¢×é²¥¡¢¹ã²¥£©\3¡¢¹ã²¥\Proje #
#                          cts\zstack\Samples\SampleApp\CC2530DB\..\..\..\..\ #
#                          ..\Components\stack\zdo\ -I                        #
#                          E:\StudyData\zigbee\2_Íø·ä¿Æ¼¼\Ê¾Àý³ÌÐò\2.×éÍøÊµÑé #
#                          \9¡¢ÍøÂçÍ¨ÐÅÊµÑé£¨µ¥²¥¡¢×é²¥¡¢¹ã²¥£©\3¡¢¹ã²¥\Proje #
#                          cts\zstack\Samples\SampleApp\CC2530DB\..\..\..\..\ #
#                          ..\Components\zmac\ -I E:\StudyData\zigbee\2_Íø·ä¿ #
#                          Æ¼¼\Ê¾Àý³ÌÐò\2.×éÍøÊµÑé\9¡¢ÍøÂçÍ¨ÐÅÊµÑé£¨µ¥²¥¡¢×é² #
#                          ¥¡¢¹ã²¥£©\3¡¢¹ã²¥\Projects\zstack\Samples\SampleAp #
#                          p\CC2530DB\..\..\..\..\..\Components\zmac\f8w\     #
#                          -Ohz --require_prototypes                          #
#    List file          =  E:\StudyData\zigbee\2_Íø·ä¿Æ¼¼\Ê¾Àý³ÌÐò\2.×éÍøÊµÑé #
#                          \9¡¢ÍøÂçÍ¨ÐÅÊµÑé£¨µ¥²¥¡¢×é²¥¡¢¹ã²¥£©\3¡¢¹ã²¥\Proje #
#                          cts\zstack\Samples\SampleApp\CC2530DB\DemoEB\List\ #
#                          SampleApp.lst                                      #
#    Object file        =  E:\StudyData\zigbee\2_Íø·ä¿Æ¼¼\Ê¾Àý³ÌÐò\2.×éÍøÊµÑé #
#                          \9¡¢ÍøÂçÍ¨ÐÅÊµÑé£¨µ¥²¥¡¢×é²¥¡¢¹ã²¥£©\3¡¢¹ã²¥\Proje #
#                          cts\zstack\Samples\SampleApp\CC2530DB\DemoEB\Obj\S #
#                          ampleApp.r51                                       #
#                                                                             #
#                                                                             #
###############################################################################

E:\StudyData\zigbee\2_Íø·ä¿Æ¼¼\Ê¾Àý³ÌÐò\2.×éÍøÊµÑé\9¡¢ÍøÂçÍ¨ÐÅÊµÑé£¨µ¥²¥¡¢×é²¥¡¢¹ã²¥£©\3¡¢¹ã²¥\Projects\zstack\Samples\SampleApp\Source\SampleApp.c
      1          #include "OSAL.h"
      2          #include "ZGlobals.h"
      3          #include "AF.h"
      4          #include "aps_groups.h"
      5          #include "ZDApp.h"
      6          
      7          #include "SampleApp.h"
      8          #include "SampleAppHw.h"
      9          
     10          #include "OnBoard.h"

   \                                 In  segment SFR_AN, at 0xf3
   \   unsigned char volatile __sfr P0SEL
   \                     P0SEL:
   \   000000                DS 1
     11          
     12          /* HAL */
     13          #include "hal_lcd.h"
     14          #include "hal_led.h"
     15          #include "hal_key.h"
     16          
     17          #include  "MT_UART.h" //´Ë´¦ÓÃÓÚ´®¿Ú
     18          
     19          #include "DHT11.H" //ÎÂÊª¶È´«¸ÐÆ÷Í·ÎÄ¼þ                                         
     20          
     21          /**
     22          *  @CopyRight(°æÈ¨): »ªÔÏ¿Æ¼¼ÓÐÏÞ¹«Ë¾ 2016~2026
     23          *  @×÷Õß£º Ö÷Òª¸ºÔðÈË£º½ª³Â¿¡ ¸¨Öú£ºÍõ³½ºÆ
     24          *  @ÈÕÆÚ£º 2016/4/5
     25          *  @ÃèÊö£º ±¾ÎÄ¼þÊÇÓ¦ÓÃµÄÖ÷ÒªÎÄ¼þ
     26          *  @Ö÷Òªº¯ÊýÁÐ±í£º
     27          *      1. void SampleApp_SendPeriodicMessage(void) //ÖÜÆÚÐÔ·¢ËÍÊý¾Ý¸øÖ÷½Úµã
     28          *      2. void SampleApp_MessageMSGCB(afIncomingMSGPacket_t *pkt)
     29          *                                                  //Ö÷½Úµã½«ÐÅÏ¢Í¨¹ý´®¿Ú·¢ËÍ³öÈ¥
     30          */
     31          
     32          #define LED P1_0
     33          #define HUMI_PIN P2_0 //¶¨ÒåÍÁÈÀÊª¶ÈµÄ¼ì²âÒý½Å
     34          
     35          /*----------------------------------------------------------
     36          *            ÈçÏÂÄÚÈÝÎª½á¹¹ÌåÉùÃ÷ºÍ±äÁ¿¡¢º¯ÊýÉùÃ÷
     37          *----------------------------------------------------------*/
     38          
     39          // This list should be filled with Application specific Cluster IDs.

   \                                 In  segment XDATA_ROM_C, align 1
     40          const cId_t SampleApp_ClusterList[SAMPLEAPP_MAX_CLUSTERS] =
   \                     SampleApp_ClusterList:
   \   000000   0100         DW 1
   \   000002   0200         DW 2
     41          {
     42            SAMPLEAPP_PERIODIC_CLUSTERID,
     43            SAMPLEAPP_FLASH_CLUSTERID
     44          };
     45          

   \                                 In  segment XDATA_ROM_C, align 1
     46          const SimpleDescriptionFormat_t SampleApp_SimpleDesc =
   \                     SampleApp_SimpleDesc:
   \   000000   14           DB 20
   \   000001   080F         DW 3848
   \   000003   0100         DW 1
   \   000005   00           DB 0
   \   000006   02           DB 2
   \   000007   ....         DW SampleApp_ClusterList
   \   000009   02           DB 2
   \   00000A   ....         DW SampleApp_ClusterList
     47          {
     48            SAMPLEAPP_ENDPOINT,              //  int Endpoint;
     49            SAMPLEAPP_PROFID,                //  uint16 AppProfId[2];
     50            SAMPLEAPP_DEVICEID,              //  uint16 AppDeviceId[2];
     51            SAMPLEAPP_DEVICE_VERSION,        //  int   AppDevVer:4;
     52            SAMPLEAPP_FLAGS,                 //  int   AppFlags:4;
     53            SAMPLEAPP_MAX_CLUSTERS,          //  uint8  AppNumInClusters;
     54            (cId_t *)SampleApp_ClusterList,  //  uint8 *pAppInClusterList;
     55            SAMPLEAPP_MAX_CLUSTERS,          //  uint8  AppNumInClusters;
     56            (cId_t *)SampleApp_ClusterList   //  uint8 *pAppInClusterList;
     57          };
     58          
     59          // This is the Endpoint/Interface description.  It is defined here, but
     60          // filled-in in SampleApp_Init().  Another way to go would be to fill
     61          // in the structure here and make it a "const" (in code space).  The
     62          // way it's defined in this sample app it is define in RAM.

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     63          endPointDesc_t SampleApp_epDesc;
   \                     SampleApp_epDesc:
   \   000000                DS 6
   \   000006                REQUIRE __INIT_XDATA_Z
     64          
     65          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     66          uint8 SampleApp_TaskID;   // Task ID for internal task/event processing
   \                     SampleApp_TaskID:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
     67                                    // This variable will be received when
     68                                    // SampleApp_Init() is called.

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     69          devStates_t SampleApp_NwkState;
   \                     SampleApp_NwkState:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
     70          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     71          uint8 SampleApp_TransID;  // This is the unique message ID (counter)
   \                     SampleApp_TransID:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
     72          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     73          afAddrType_t SampleApp_Periodic_DstAddr;
   \                     SampleApp_Periodic_DstAddr:
   \   000000                DS 12
   \   00000C                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     74          afAddrType_t SampleApp_Flash_DstAddr;
   \                     SampleApp_Flash_DstAddr:
   \   000000                DS 12
   \   00000C                REQUIRE __INIT_XDATA_Z
     75          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     76          aps_Group_t SampleApp_Group;
   \                     SampleApp_Group:
   \   000000                DS 18
   \   000012                REQUIRE __INIT_XDATA_Z
     77          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     78          uint8 SampleAppPeriodicCounter = 0;
   \                     SampleAppPeriodicCounter:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     79          uint8 SampleAppFlashCounter = 0;
   \                     SampleAppFlashCounter:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
     80          
     81          void SampleApp_HandleKeys( uint8 shift, uint8 keys );
     82          void SampleApp_MessageMSGCB( afIncomingMSGPacket_t *pckt );
     83          void SampleApp_SendPeriodicMessage( void );
     84          void SampleApp_SendFlashMessage( uint16 flashTime );
     85          
     86          /*----------------------------------------------------------------*
     87           * @º¯Êý      SampleApp_SendPeriodicMessage
     88           * @¼ò½é   ·¢ËÍÖÜÆÚÐÔÐÅÏ¢(¸øÖ÷½Úµã)
     89           * @²ÎÊý    none
     90           * @·µ»ØÖµ  none
     91           *----------------------------------------------------------------*/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     92          void SampleApp_SendPeriodicMessage( void )
   \                     SampleApp_SendPeriodicMessage:
     93          {
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 5
   \   000005   74FB         MOV     A,#-0x5
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
     94            uint8 data[2]={'9','9'};//×Ô¶¨ÒåÊý¾Ý
                         ^
Warning[Pe177]: variable "data" was declared but never referenced
     95            uint8 T[5]; //ÎÂ¶È+ÌáÊ¾·û
     96            DHT11();    //ÎÂ¶È¼ì²â
   \   00000A                ; Setup parameters for call to function DHT11
   \   00000A   12....       LCALL   ??DHT11?relay
     97            T[0] = temp_decade + '0';
   \   00000D   90....       MOV     DPTR,#temp_decade
   \   000010   E0           MOVX    A,@DPTR
   \   000011   2430         ADD     A,#0x30
   \   000013   85..82       MOV     DPL,?XSP + 0
   \   000016   85..83       MOV     DPH,?XSP + 1
   \   000019   F0           MOVX    @DPTR,A
     98            T[1] = temp_unit + '0';
   \   00001A   90....       MOV     DPTR,#temp_unit
   \   00001D   E0           MOVX    A,@DPTR
   \   00001E   2430         ADD     A,#0x30
   \   000020   C0E0         PUSH    A
   \   000022   7401         MOV     A,#0x1
   \   000024   12....       LCALL   ?XSTACK_DISP0_8
   \   000027   D0E0         POP     A
   \   000029   F0           MOVX    @DPTR,A
     99            T[2] = '/';
   \   00002A   7402         MOV     A,#0x2
   \   00002C   12....       LCALL   ?XSTACK_DISP0_8
   \   00002F   742F         MOV     A,#0x2f
   \   000031   F0           MOVX    @DPTR,A
    100            T[3] = humi_decade + '0';
   \   000032   90....       MOV     DPTR,#humi_decade
   \   000035   E0           MOVX    A,@DPTR
   \   000036   2430         ADD     A,#0x30
   \   000038   C0E0         PUSH    A
   \   00003A   7403         MOV     A,#0x3
   \   00003C   12....       LCALL   ?XSTACK_DISP0_8
   \   00003F   D0E0         POP     A
   \   000041   F0           MOVX    @DPTR,A
    101            T[4] = humi_unit + '0';
   \   000042   90....       MOV     DPTR,#humi_unit
   \   000045   E0           MOVX    A,@DPTR
   \   000046   2430         ADD     A,#0x30
   \   000048   C0E0         PUSH    A
   \   00004A   7404         MOV     A,#0x4
   \   00004C   12....       LCALL   ?XSTACK_DISP0_8
   \   00004F   D0E0         POP     A
   \   000051   F0           MOVX    @DPTR,A
    102            
    103          //  if(HUMI_PIN) //Èç¹ûÊª¶È´«¸ÐÆ÷ÎªÕý
    104          //  {
    105          //    LED = 1;
    106          //    data[0] = '1';
    107          //  }
    108          //  else
    109          //  {
    110          //    LED = 0;
    111          //    data[0] = '0';   
    112          //  }
    113            if ( AF_DataRequest( &SampleApp_Periodic_DstAddr, &SampleApp_epDesc,
    114                                 SAMPLEAPP_PERIODIC_CLUSTERID, //ºÍÖ÷½ÚµãÖÐSampleApp_MessageMSGCBµÄSAMPLEAPP_PERIODIC_CLUSTERIDÒ»ÖÂ¡£
    115                                 5,//×Ö½ÚÊý
    116                                 T,//Ö¸ÕëÍ·
    117                                 &SampleApp_TransID,
    118                                 AF_DISCV_ROUTE,
    119                                 AF_DEFAULT_RADIUS ) == afStatus_SUCCESS )
   \   000052                ; Setup parameters for call to function AF_DataRequest
   \   000052   75..1E       MOV     ?V0 + 0,#0x1e
   \   000055   78..         MOV     R0,#?V0 + 0
   \   000057   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   00005A   75....       MOV     ?V0 + 0,#SampleApp_TransID & 0xff
   \   00005D   75....       MOV     ?V0 + 1,#(SampleApp_TransID >> 8) & 0xff
   \   000060   78..         MOV     R0,#?V0 + 0
   \   000062   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000065   7403         MOV     A,#0x3
   \   000067   12....       LCALL   ?XSTACK_DISP0_8
   \   00006A   8582..       MOV     ?V0 + 0,DPL
   \   00006D   8583..       MOV     ?V0 + 1,DPH
   \   000070   78..         MOV     R0,#?V0 + 0
   \   000072   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000075   75..05       MOV     ?V0 + 0,#0x5
   \   000078   75..00       MOV     ?V0 + 1,#0x0
   \   00007B   78..         MOV     R0,#?V0 + 0
   \   00007D   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000080   75..01       MOV     ?V0 + 0,#0x1
   \   000083   78..         MOV     R0,#?V0 + 0
   \   000085   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000088   7920         MOV     R1,#0x20
   \   00008A   7C..         MOV     R4,#SampleApp_epDesc & 0xff
   \   00008C   7D..         MOV     R5,#(SampleApp_epDesc >> 8) & 0xff
   \   00008E   7A..         MOV     R2,#SampleApp_Periodic_DstAddr & 0xff
   \   000090   7B..         MOV     R3,#(SampleApp_Periodic_DstAddr >> 8) & 0xff
   \   000092   12....       LCALL   ??AF_DataRequest?relay
   \   000095   7409         MOV     A,#0x9
   \   000097   12....       LCALL   ?DEALLOC_XSTACK8
    120            {
    121            }
    122            else
    123            {
    124              // Error occurred in request to send.
    125            }
    126          }
   \   00009A   7405         MOV     A,#0x5
   \   00009C   02....       LJMP    ?Subroutine0 & 0xFFFF

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine0:
   \   000000   12....       LCALL   ?DEALLOC_XSTACK8
   \   000003                REQUIRE ??Subroutine2_0
   \   000003                ; // Fall through to label ??Subroutine2_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine2_0:
   \   000000   7F02         MOV     R7,#0x2
   \   000002   02....       LJMP    ?BANKED_LEAVE_XDATA
    127          
    128          /*-----------------------------------------------------------------------------
    129           * @fn      SampleApp_MessageMSGCB
    130           * @brief   Êý¾ÝÐÅÏ¢´¦ÀíÆ÷µÄ»Øµ÷º¯Êý¡£¸Ãº¯Êý´¦ÀíÈÎºÎ½øÀ´µÄÊý¾Ý£¨¿ÉÄÜÀ´×ÔÓëÆäËûÉè±¸£©
    131           *          Òò´Ë£¬ÒÀÀµÓÚcluster ID(´ØID)£¬½øÐÐÏàÓ¦µÄ²Ù×÷
    132           * @param   none
    133           * @return  none
    134           *---------------------------------------------------------------------------*/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    135          void SampleApp_MessageMSGCB( afIncomingMSGPacket_t *pkt )
   \                     SampleApp_MessageMSGCB:
    136          {
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 0
   \   000005   EA           MOV     A,R2
   \   000006   FE           MOV     R6,A
   \   000007   EB           MOV     A,R3
   \   000008   FF           MOV     R7,A
    137            uint16 flashTime;
    138          
    139            switch ( pkt->clusterId )
   \   000009   8E82         MOV     DPL,R6
   \   00000B   8F83         MOV     DPH,R7
   \   00000D   A3           INC     DPTR
   \   00000E   A3           INC     DPTR
   \   00000F   A3           INC     DPTR
   \   000010   A3           INC     DPTR
   \   000011   E0           MOVX    A,@DPTR
   \   000012   F5..         MOV     ?V0 + 0,A
   \   000014   A3           INC     DPTR
   \   000015   E0           MOVX    A,@DPTR
   \   000016   F5..         MOV     ?V0 + 1,A
   \   000018   78..         MOV     R0,#?V0 + 0
   \   00001A   12....       LCALL   ?US_SWITCH_DENSE
   \                     `?<Jumptable for SampleApp_MessageMSGCB>_0`:
   \   00001D   0100         DW        1
   \   00001F   01           DB        1
   \   000020   ....         DW        ??SampleApp_MessageMSGCB_0
   \   000022   ....         DW        ??SampleApp_MessageMSGCB_1
   \   000024   ....         DW        ??SampleApp_MessageMSGCB_2
    140            {
    141              case SAMPLEAPP_PERIODIC_CLUSTERID:
    142                HalUARTWrite(0,"I get data\n",11);//ÓÃÓÚÌáÊ¾ÓÐÊý¾Ý£¨´®¿Ú0,'×Ö·û',×Ö·û¸öÊý£©
   \                     ??SampleApp_MessageMSGCB_1:
   \   000026                ; Setup parameters for call to function HalUARTWrite
   \   000026   7C0B         MOV     R4,#0xb
   \   000028   7D00         MOV     R5,#0x0
   \   00002A   7A..         MOV     R2,#`?<Constant "I get data\\n">` & 0xff
   \   00002C   7B..         MOV     R3,#(`?<Constant "I get data\\n">` >> 8) & 0xff
   \   00002E   7900         MOV     R1,#0x0
   \   000030   12....       LCALL   ??HalUARTWrite?relay
    143                HalUARTWrite(0, &pkt->cmd.Data[0],5); //´òÓ¡ÊÕµ½Êý¾Ý
   \   000033                ; Setup parameters for call to function HalUARTWrite
   \   000033   7C05         MOV     R4,#0x5
   \   000035   7D00         MOV     R5,#0x0
   \   000037   12....       LCALL   ?Subroutine1 & 0xFFFF
   \                     ??CrossCallReturnLabel_0:
   \   00003A   FA           MOV     R2,A
   \   00003B   A3           INC     DPTR
   \   00003C   E0           MOVX    A,@DPTR
   \   00003D   FB           MOV     R3,A
   \   00003E   7900         MOV     R1,#0x0
   \   000040   12....       LCALL   ??HalUARTWrite?relay
    144                HalUARTWrite(0,"E\n",2);  //»Ø³µ»»ÐÐ£¬±ãÓÚ¹Û²ì
   \   000043                ; Setup parameters for call to function HalUARTWrite
   \   000043   7C02         MOV     R4,#0x2
   \   000045   7D00         MOV     R5,#0x0
   \   000047   7A..         MOV     R2,#`?<Constant "E\\n">` & 0xff
   \   000049   7B..         MOV     R3,#(`?<Constant "E\\n">` >> 8) & 0xff
   \   00004B   7900         MOV     R1,#0x0
   \   00004D   12....       LCALL   ??HalUARTWrite?relay
    145                break;
   \   000050   8033         SJMP    ??SampleApp_MessageMSGCB_0
   \                     ??SampleApp_MessageMSGCB_2:
   \   000052   12....       LCALL   ?Subroutine1 & 0xFFFF
   \                     ??CrossCallReturnLabel_1:
   \   000055   F8           MOV     R0,A
   \   000056   A3           INC     DPTR
   \   000057   E0           MOVX    A,@DPTR
   \   000058   F9           MOV     R1,A
   \   000059                ; Setup parameters for call to function HalLedBlink
   \   000059   8882         MOV     DPL,R0
   \   00005B   8983         MOV     DPH,R1
   \   00005D   A3           INC     DPTR
   \   00005E   E0           MOVX    A,@DPTR
   \   00005F   FA           MOV     R2,A
   \   000060   8882         MOV     DPL,R0
   \   000062   8983         MOV     DPH,R1
   \   000064   A3           INC     DPTR
   \   000065   A3           INC     DPTR
   \   000066   E0           MOVX    A,@DPTR
   \   000067   F9           MOV     R1,A
   \   000068   EA           MOV     A,R2
   \   000069   2400         ADD     A,#0x0
   \   00006B   F5..         MOV     ?V0 + 0,A
   \   00006D   E4           CLR     A
   \   00006E   39           ADDC    A,R1
   \   00006F   F5..         MOV     ?V0 + 1,A
   \   000071   7402         MOV     A,#0x2
   \   000073   78..         MOV     R0,#?V0 + 0
   \   000075   12....       LCALL   ?US_SHR
   \   000078   AC..         MOV     R4,?V0 + 0
   \   00007A   AD..         MOV     R5,?V0 + 1
   \   00007C   7B32         MOV     R3,#0x32
   \   00007E   7A04         MOV     R2,#0x4
   \   000080   7908         MOV     R1,#0x8
    146          
    147              case SAMPLEAPP_FLASH_CLUSTERID:
    148                flashTime = BUILD_UINT16(pkt->cmd.Data[1], pkt->cmd.Data[2] );
    149                HalLedBlink( HAL_LED_4, 4, 50, (flashTime / 4) );
   \   000082   12....       LCALL   ??HalLedBlink?relay
    150                break;
    151            }
    152          }
   \                     ??SampleApp_MessageMSGCB_0:
   \   000085   80..         SJMP    ??Subroutine2_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine1:
   \   000000   EE           MOV     A,R6
   \   000001   2422         ADD     A,#0x22
   \   000003   F582         MOV     DPL,A
   \   000005   EF           MOV     A,R7
   \   000006   3400         ADDC    A,#0x0
   \   000008   F583         MOV     DPH,A
   \   00000A   E0           MOVX    A,@DPTR
   \   00000B   22           RET
    153          
    154          
    155          /*********************************************************************
    156           * @fn      SampleApp_Init
    157           *
    158           * @brief   Initialization function for the Generic App Task.
    159           *          This is called during initialization and should contain
    160           *          any application specific initialization (ie. hardware
    161           *          initialization/setup, table initialization, power up
    162           *          notificaiton ... ).
    163           *
    164           * @param   task_id - the ID assigned by OSAL.  This ID should be
    165           *                    used to send messages and set timers.
    166           *
    167           * @return  none
    168           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    169          void SampleApp_Init( uint8 task_id )
   \                     SampleApp_Init:
    170          {
   \   000000   74F5         MOV     A,#-0xb
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 11
   \   000005                ; Auto size: 0
   \   000005   E9           MOV     A,R1
   \   000006   FE           MOV     R6,A
    171            SampleApp_TaskID = task_id;
   \   000007   90....       MOV     DPTR,#SampleApp_TaskID
   \   00000A   F0           MOVX    @DPTR,A
    172            SampleApp_NwkState = DEV_INIT;
   \   00000B   90....       MOV     DPTR,#SampleApp_NwkState
   \   00000E   7401         MOV     A,#0x1
   \   000010   F0           MOVX    @DPTR,A
    173            SampleApp_TransID = 0;
   \   000011   90....       MOV     DPTR,#SampleApp_TransID
   \   000014   E4           CLR     A
   \   000015   F0           MOVX    @DPTR,A
    174            
    175            MT_UartInit();//´®¿Ú³õÊ¼»¯
   \   000016                ; Setup parameters for call to function MT_UartInit
   \   000016   12....       LCALL   ??MT_UartInit?relay
    176            MT_UartRegisterTaskID(task_id);//µÇ¼ÇÈÎÎñºÅ
   \   000019                ; Setup parameters for call to function MT_UartRegisterTaskID
   \   000019   EE           MOV     A,R6
   \   00001A   F9           MOV     R1,A
   \   00001B   12....       LCALL   ??MT_UartRegisterTaskID?relay
    177            HalUARTWrite(0,"Hello IGreen\n",12); //£¨´®¿Ú0£¬'×Ö·û'£¬×Ö·û¸öÊý¡££©
   \   00001E                ; Setup parameters for call to function HalUARTWrite
   \   00001E   7C0C         MOV     R4,#0xc
   \   000020   7D00         MOV     R5,#0x0
   \   000022   7A..         MOV     R2,#`?<Constant "Hello IGreen\\n">` & 0xff
   \   000024   7B..         MOV     R3,#(`?<Constant "Hello IGreen\\n">` >> 8) & 0xff
   \   000026   7900         MOV     R1,#0x0
   \   000028   12....       LCALL   ??HalUARTWrite?relay
    178            
    179            /*------------------------------------------ 
    180             *        Òý½Å³õÊ¼»¯
    181             *------------------------------------------*/
    182          //  P1DIR |= 0x010 ; //P1_0  ¶¨ÒåÎªÊä³ö   Êª¶È´«¸ÐÆ÷
    183          //  P1INP |= 0X01;   // ´ò¿ªÏÂÀ­
    184            
    185          //  P2SEL &= ~0X01;  // ÉèÖÃ 0 P20  ÎªÆÕÍ¨ O IO  ¿Ú
    186          //  P2DIR &= ~0X01;  // ÔÚ ÔÚ 0 P20  ¿Ú£¬ÉèÖÃÎªÊäÈëÄ£Ê½
    187          //  P2INP &= ~0x01;  // ´ò¿ª 0 P20  ÉÏÀ­µç×è, , ²»Ó°Ïì
    188            
    189            P0SEL &= 0xbf;   //DS18B20/DHT11 IO¿Ú³õÊ¼»¯
   \   00002B   53F3BF       ANL     0xf3,#0xbf
    190            
    191            // Device hardware initialization can be added here or in main() (Zmain.c).
    192            // If the hardware is application specific - add it here.
    193            // If the hardware is other parts of the device add it in main().
    194          
    195           #if defined ( BUILD_ALL_DEVICES )
    196            // The "Demo" target is setup to have BUILD_ALL_DEVICES and HOLD_AUTO_START
    197            // We are looking at a jumper (defined in SampleAppHw.c) to be jumpered
    198            // together - if they are - we will start up a coordinator. Otherwise,
    199            // the device will start as a router.
    200            if ( readCoordinatorJumper() )
   \   00002E                ; Setup parameters for call to function readCoordinatorJumper
   \   00002E   12....       LCALL   ??readCoordinatorJumper?relay
   \   000031   E9           MOV     A,R1
   \   000032   90....       MOV     DPTR,#zgDeviceLogicalType
   \   000035   6003         JZ      ??SampleApp_Init_0
    201              zgDeviceLogicalType = ZG_DEVICETYPE_COORDINATOR;
   \   000037   E4           CLR     A
   \   000038   8002         SJMP    ??SampleApp_Init_1
    202            else
    203              zgDeviceLogicalType = ZG_DEVICETYPE_ROUTER;
   \                     ??SampleApp_Init_0:
   \   00003A   7401         MOV     A,#0x1
   \                     ??SampleApp_Init_1:
   \   00003C   F0           MOVX    @DPTR,A
    204          #endif // BUILD_ALL_DEVICES
    205          
    206          #if defined ( HOLD_AUTO_START )
    207            // HOLD_AUTO_START is a compile option that will surpress ZDApp
    208            //  from starting the device and wait for the application to
    209            //  start the device.
    210            ZDOInitDevice(0);
   \   00003D                ; Setup parameters for call to function ZDOInitDevice
   \   00003D   7A00         MOV     R2,#0x0
   \   00003F   7B00         MOV     R3,#0x0
   \   000041   12....       LCALL   ??ZDOInitDevice?relay
    211          #endif
    212          
    213            // Setup for the periodic message's destination address
    214            // Broadcast to everyone
    215            SampleApp_Periodic_DstAddr.addrMode = (afAddrMode_t)AddrBroadcast;
   \   000044   90....       MOV     DPTR,#SampleApp_Periodic_DstAddr + 8
   \   000047   740F         MOV     A,#0xf
   \   000049   F0           MOVX    @DPTR,A
    216            SampleApp_Periodic_DstAddr.endPoint = SAMPLEAPP_ENDPOINT;
   \   00004A   A3           INC     DPTR
   \   00004B   7414         MOV     A,#0x14
   \   00004D   F0           MOVX    @DPTR,A
    217            SampleApp_Periodic_DstAddr.addr.shortAddr = 0xFFFF;//Êý¾Ý°ü·¢ËÍµ½ÍøÂçÉÏËùÓÐÉè±¸
   \   00004E   90....       MOV     DPTR,#SampleApp_Periodic_DstAddr
   \   000051   74FF         MOV     A,#-0x1
   \   000053   F0           MOVX    @DPTR,A
   \   000054   A3           INC     DPTR
   \   000055   F0           MOVX    @DPTR,A
    218          
    219            // Setup for the flash command's destination address - Group 1
    220            SampleApp_Flash_DstAddr.addrMode = (afAddrMode_t)afAddrGroup;
   \   000056   90....       MOV     DPTR,#SampleApp_Flash_DstAddr + 8
   \   000059   7401         MOV     A,#0x1
   \   00005B   F0           MOVX    @DPTR,A
    221            SampleApp_Flash_DstAddr.endPoint = SAMPLEAPP_ENDPOINT;
   \   00005C   A3           INC     DPTR
   \   00005D   7414         MOV     A,#0x14
   \   00005F   F0           MOVX    @DPTR,A
    222            SampleApp_Flash_DstAddr.addr.shortAddr = SAMPLEAPP_FLASH_GROUP;
   \   000060   90....       MOV     DPTR,#SampleApp_Flash_DstAddr
   \   000063   7401         MOV     A,#0x1
   \   000065   F0           MOVX    @DPTR,A
   \   000066   A3           INC     DPTR
   \   000067   E4           CLR     A
   \   000068   F0           MOVX    @DPTR,A
    223          
    224            // Fill out the endpoint description.
    225            SampleApp_epDesc.endPoint = SAMPLEAPP_ENDPOINT;
   \   000069   90....       MOV     DPTR,#SampleApp_epDesc
   \   00006C   7414         MOV     A,#0x14
   \   00006E   F0           MOVX    @DPTR,A
    226            SampleApp_epDesc.task_id = &SampleApp_TaskID;
   \   00006F   A3           INC     DPTR
   \   000070   74..         MOV     A,#SampleApp_TaskID & 0xff
   \   000072   F0           MOVX    @DPTR,A
   \   000073   A3           INC     DPTR
   \   000074   74..         MOV     A,#(SampleApp_TaskID >> 8) & 0xff
   \   000076   F0           MOVX    @DPTR,A
    227            SampleApp_epDesc.simpleDesc
    228                      = (SimpleDescriptionFormat_t *)&SampleApp_SimpleDesc;
   \   000077   A3           INC     DPTR
   \   000078   74..         MOV     A,#SampleApp_SimpleDesc & 0xff
   \   00007A   F0           MOVX    @DPTR,A
   \   00007B   A3           INC     DPTR
   \   00007C   74..         MOV     A,#(SampleApp_SimpleDesc >> 8) & 0xff
   \   00007E   F0           MOVX    @DPTR,A
    229            SampleApp_epDesc.latencyReq = noLatencyReqs;
   \   00007F   A3           INC     DPTR
   \   000080   E4           CLR     A
   \   000081   F0           MOVX    @DPTR,A
    230          
    231            // Register the endpoint description with the AF
    232            afRegister( &SampleApp_epDesc );
   \   000082                ; Setup parameters for call to function afRegister
   \   000082   7A..         MOV     R2,#SampleApp_epDesc & 0xff
   \   000084   7B..         MOV     R3,#(SampleApp_epDesc >> 8) & 0xff
   \   000086   12....       LCALL   ??afRegister?relay
    233          
    234            // Register for all key events - This app will handle all key events
    235            RegisterForKeys( SampleApp_TaskID );
   \   000089                ; Setup parameters for call to function RegisterForKeys
   \   000089   90....       MOV     DPTR,#SampleApp_TaskID
   \   00008C   E0           MOVX    A,@DPTR
   \   00008D   F9           MOV     R1,A
   \   00008E   12....       LCALL   ??RegisterForKeys?relay
    236          
    237            // By default, all devices start out in Group 1
    238            SampleApp_Group.ID = 0x0001;
   \   000091   90....       MOV     DPTR,#SampleApp_Group
   \   000094   7401         MOV     A,#0x1
   \   000096   F0           MOVX    @DPTR,A
   \   000097   A3           INC     DPTR
   \   000098   E4           CLR     A
   \   000099   F0           MOVX    @DPTR,A
    239            osal_memcpy( SampleApp_Group.name, "Group 1", 7  );
   \   00009A                ; Setup parameters for call to function osal_memcpy
   \   00009A   75....       MOV     ?V0 + 0,#`?<Constant "Group 1">` & 0xff
   \   00009D   75....       MOV     ?V0 + 1,#(`?<Constant "Group 1">` >> 8) & 0xff
   \   0000A0   F5..         MOV     ?V0 + 2,A
   \   0000A2   78..         MOV     R0,#?V0 + 0
   \   0000A4   12....       LCALL   ?PUSH_XSTACK_I_THREE
   \   0000A7   7C07         MOV     R4,#0x7
   \   0000A9   7D00         MOV     R5,#0x0
   \   0000AB   7A..         MOV     R2,#(SampleApp_Group + 2) & 0xff
   \   0000AD   7B..         MOV     R3,#((SampleApp_Group + 2) >> 8) & 0xff
   \   0000AF   12....       LCALL   ??osal_memcpy?relay
   \   0000B2   7403         MOV     A,#0x3
   \   0000B4   12....       LCALL   ?DEALLOC_XSTACK8
    240            aps_AddGroup( SAMPLEAPP_ENDPOINT, &SampleApp_Group );
   \   0000B7                ; Setup parameters for call to function aps_AddGroup
   \   0000B7   7A..         MOV     R2,#SampleApp_Group & 0xff
   \   0000B9   7B..         MOV     R3,#(SampleApp_Group >> 8) & 0xff
   \   0000BB   7914         MOV     R1,#0x14
   \   0000BD   12....       LCALL   ??aps_AddGroup?relay
    241          
    242          #if defined ( LCD_SUPPORTED )
    243            HalLcdWriteString( "SampleApp", HAL_LCD_LINE_1 );
   \   0000C0                ; Setup parameters for call to function HalLcdWriteString
   \   0000C0   7901         MOV     R1,#0x1
   \   0000C2   7A..         MOV     R2,#`?<Constant "SampleApp">` & 0xff
   \   0000C4   7B..         MOV     R3,#(`?<Constant "SampleApp">` >> 8) & 0xff
   \   0000C6   12....       LCALL   ??HalLcdWriteString?relay
    244          #endif
    245          }
   \   0000C9   7F03         MOV     R7,#0x3
   \   0000CB   02....       LJMP    ?BANKED_LEAVE_XDATA
   \   0000CE                REQUIRE P0SEL
    246          
    247          /*********************************************************************
    248           * @fn      SampleApp_ProcessEvent
    249           *
    250           * @brief   Generic Application Task event processor.  This function
    251           *          is called to process all events for the task.  Events
    252           *          include timers, messages and any other user defined events.
    253           *
    254           * @param   task_id  - The OSAL assigned task ID.
    255           * @param   events - events to process.  This is a bit map and can
    256           *                   contain more than one event.
    257           *
    258           * @return  none
    259           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    260          uint16 SampleApp_ProcessEvent( uint8 task_id, uint16 events )
   \                     SampleApp_ProcessEvent:
    261          {
   \   000000   74F4         MOV     A,#-0xc
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 12
   \   000005                ; Auto size: 0
   \   000005   EA           MOV     A,R2
   \   000006   FE           MOV     R6,A
   \   000007   EB           MOV     A,R3
   \   000008   FF           MOV     R7,A
    262            afIncomingMSGPacket_t *MSGpkt;
    263            (void)task_id;  // Intentionally unreferenced parameter
    264          
    265            if ( events & SYS_EVENT_MSG )
   \   000009   5480         ANL     A,#0x80
   \   00000B   6079         JZ      ??SampleApp_ProcessEvent_0
    266            {
    267              MSGpkt = (afIncomingMSGPacket_t *)osal_msg_receive( SampleApp_TaskID );
   \   00000D                ; Setup parameters for call to function osal_msg_receive
   \   00000D   802B         SJMP    ??SampleApp_ProcessEvent_1
    268              while ( MSGpkt )
    269              {
    270                switch ( MSGpkt->hdr.event )
    271                {
    272                  // Received when a key is pressed
    273                  case KEY_CHANGE:
    274                    SampleApp_HandleKeys( ((keyChange_t *)MSGpkt)->state, ((keyChange_t *)MSGpkt)->keys );
    275                    break;
    276          
    277                  // Received when a messages is received (OTA) for this endpoint
    278                  case AF_INCOMING_MSG_CMD:
    279                    SampleApp_MessageMSGCB( MSGpkt );
    280                    break;
    281          
    282                  // Received whenever the device changes state in the network
    283                  case ZDO_STATE_CHANGE:
    284                    SampleApp_NwkState = (devStates_t)(MSGpkt->hdr.status);
   \                     ??SampleApp_ProcessEvent_2:
   \   00000F   A3           INC     DPTR
   \   000010   E0           MOVX    A,@DPTR
   \   000011   90....       MOV     DPTR,#SampleApp_NwkState
   \   000014   F0           MOVX    @DPTR,A
    285                    if ( (SampleApp_NwkState == DEV_ZB_COORD)
    286                        || (SampleApp_NwkState == DEV_ROUTER)
    287                        || (SampleApp_NwkState == DEV_END_DEVICE) )
   \   000015   6409         XRL     A,#0x9
   \   000017   600A         JZ      ??SampleApp_ProcessEvent_3
   \   000019   E0           MOVX    A,@DPTR
   \   00001A   6407         XRL     A,#0x7
   \   00001C   6005         JZ      ??SampleApp_ProcessEvent_3
   \   00001E   E0           MOVX    A,@DPTR
   \   00001F   6406         XRL     A,#0x6
   \   000021   7010         JNZ     ??SampleApp_ProcessEvent_4
    288                    {
    289                      // Start sending the periodic message in a regular interval.
    290                      osal_start_timerEx( SampleApp_TaskID,
    291                                        SAMPLEAPP_SEND_PERIODIC_MSG_EVT,
    292                                        SAMPLEAPP_SEND_PERIODIC_MSG_TIMEOUT );
   \                     ??SampleApp_ProcessEvent_3:
   \   000023                ; Setup parameters for call to function osal_start_timerEx
   \   000023   7CE8         MOV     R4,#-0x18
   \   000025   7D03         MOV     R5,#0x3
   \   000027   7A01         MOV     R2,#0x1
   \   000029   7B00         MOV     R3,#0x0
   \   00002B   90....       MOV     DPTR,#SampleApp_TaskID
   \   00002E   E0           MOVX    A,@DPTR
   \   00002F   F9           MOV     R1,A
   \   000030   12....       LCALL   ??osal_start_timerEx?relay
    293                    }
    294                    else
    295                    {
    296                      // Device is no longer in the network
    297                    }
    298                    break;
    299          
    300                  default:
    301                    break;
    302                }
    303          
    304                // Release the memory
    305                osal_msg_deallocate( (uint8 *)MSGpkt );
   \                     ??SampleApp_ProcessEvent_4:
   \   000033                ; Setup parameters for call to function osal_msg_deallocate
   \   000033   AA..         MOV     R2,?V0 + 0
   \   000035   AB..         MOV     R3,?V0 + 1
   \   000037   12....       LCALL   ??osal_msg_deallocate?relay
    306          
    307                // Next - if one is available
    308                MSGpkt = (afIncomingMSGPacket_t *)osal_msg_receive( SampleApp_TaskID );
   \   00003A                ; Setup parameters for call to function osal_msg_receive
   \                     ??SampleApp_ProcessEvent_1:
   \   00003A   90....       MOV     DPTR,#SampleApp_TaskID
   \   00003D   E0           MOVX    A,@DPTR
   \   00003E   F9           MOV     R1,A
   \   00003F   12....       LCALL   ??osal_msg_receive?relay
   \   000042   8A..         MOV     ?V0 + 0,R2
   \   000044   8B..         MOV     ?V0 + 1,R3
   \   000046   E5..         MOV     A,?V0 + 0
   \   000048   45..         ORL     A,?V0 + 1
   \   00004A   6032         JZ      ??SampleApp_ProcessEvent_5
   \   00004C   85..82       MOV     DPL,?V0 + 0
   \   00004F   85..83       MOV     DPH,?V0 + 1
   \   000052   E0           MOVX    A,@DPTR
   \   000053   24E6         ADD     A,#-0x1a
   \   000055   601E         JZ      ??SampleApp_ProcessEvent_6
   \   000057   245A         ADD     A,#0x5a
   \   000059   6006         JZ      ??SampleApp_ProcessEvent_7
   \   00005B   24EF         ADD     A,#-0x11
   \   00005D   60B0         JZ      ??SampleApp_ProcessEvent_2
   \   00005F   80D2         SJMP    ??SampleApp_ProcessEvent_4
   \                     ??SampleApp_ProcessEvent_7:
   \   000061                ; Setup parameters for call to function SampleApp_HandleKeys
   \   000061   A3           INC     DPTR
   \   000062   A3           INC     DPTR
   \   000063   A3           INC     DPTR
   \   000064   E0           MOVX    A,@DPTR
   \   000065   FA           MOV     R2,A
   \   000066   85..82       MOV     DPL,?V0 + 0
   \   000069   85..83       MOV     DPH,?V0 + 1
   \   00006C   A3           INC     DPTR
   \   00006D   A3           INC     DPTR
   \   00006E   E0           MOVX    A,@DPTR
   \   00006F   F9           MOV     R1,A
   \   000070   12....       LCALL   ??SampleApp_HandleKeys?relay
   \   000073   80BE         SJMP    ??SampleApp_ProcessEvent_4
   \                     ??SampleApp_ProcessEvent_6:
   \   000075                ; Setup parameters for call to function SampleApp_MessageMSGCB
   \   000075   AA..         MOV     R2,?V0 + 0
   \   000077   AB..         MOV     R3,?V0 + 1
   \   000079   12....       LCALL   ??SampleApp_MessageMSGCB?relay
   \   00007C   80B5         SJMP    ??SampleApp_ProcessEvent_4
    309              }
    310          
    311              // return unprocessed events
    312              return (events ^ SYS_EVENT_MSG);
   \                     ??SampleApp_ProcessEvent_5:
   \   00007E   EE           MOV     A,R6
   \   00007F   FA           MOV     R2,A
   \   000080   EF           MOV     A,R7
   \   000081   6480         XRL     A,#0x80
   \                     ??SampleApp_ProcessEvent_8:
   \   000083   FB           MOV     R3,A
   \   000084   802A         SJMP    ??SampleApp_ProcessEvent_9
    313            }
    314          
    315            // Send a message out - This event is generated by a timer
    316            //  (setup in SampleApp_Init()).
    317            if ( events & SAMPLEAPP_SEND_PERIODIC_MSG_EVT )
   \                     ??SampleApp_ProcessEvent_0:
   \   000086   EE           MOV     A,R6
   \   000087   A2E0         MOV     C,0xE0 /* A   */.0
   \   000089   5021         JNC     ??SampleApp_ProcessEvent_10
    318            {
    319              // Send the periodic message
    320              SampleApp_SendPeriodicMessage();//ÖÜÆÚÐÔ·¢ËÍº¯Êý
   \   00008B                ; Setup parameters for call to function SampleApp_SendPeriodicMessage
   \   00008B   12....       LCALL   ??SampleApp_SendPeriodicMessage?relay
    321          
    322              // Setup to send message again in normal period (+ a little jitter)
    323              osal_start_timerEx( SampleApp_TaskID, SAMPLEAPP_SEND_PERIODIC_MSG_EVT,
    324                  (SAMPLEAPP_SEND_PERIODIC_MSG_TIMEOUT + (osal_rand() & 0x00FF)) );
   \   00008E                ; Setup parameters for call to function osal_rand
   \   00008E   12....       LCALL   ??osal_rand?relay
   \   000091                ; Setup parameters for call to function osal_start_timerEx
   \   000091   EA           MOV     A,R2
   \   000092   24E8         ADD     A,#-0x18
   \   000094   FC           MOV     R4,A
   \   000095   E4           CLR     A
   \   000096   3403         ADDC    A,#0x3
   \   000098   FD           MOV     R5,A
   \   000099   7A01         MOV     R2,#0x1
   \   00009B   7B00         MOV     R3,#0x0
   \   00009D   90....       MOV     DPTR,#SampleApp_TaskID
   \   0000A0   E0           MOVX    A,@DPTR
   \   0000A1   F9           MOV     R1,A
   \   0000A2   12....       LCALL   ??osal_start_timerEx?relay
    325          
    326              // return unprocessed events
    327              return (events ^ SAMPLEAPP_SEND_PERIODIC_MSG_EVT);
   \   0000A5   EE           MOV     A,R6
   \   0000A6   6401         XRL     A,#0x1
   \   0000A8   FA           MOV     R2,A
   \   0000A9   EF           MOV     A,R7
   \   0000AA   80D7         SJMP    ??SampleApp_ProcessEvent_8
    328            }
    329          
    330            // Discard unknown events
    331            return 0;
   \                     ??SampleApp_ProcessEvent_10:
   \   0000AC   7A00         MOV     R2,#0x0
   \   0000AE   7B00         MOV     R3,#0x0
   \                     ??SampleApp_ProcessEvent_9:
   \   0000B0   7F04         MOV     R7,#0x4
   \   0000B2   02....       LJMP    ?BANKED_LEAVE_XDATA
    332          }
    333          
    334          /*********************************************************************
    335           * Event Generation Functions
    336           */
    337          /*********************************************************************
    338           * @fn      SampleApp_HandleKeys
    339           *
    340           * @brief   Handles all key events for this device.
    341           *
    342           * @param   shift - true if in shift/alt.
    343           * @param   keys - bit field for key events. Valid entries:
    344           *                 HAL_KEY_SW_2
    345           *                 HAL_KEY_SW_1
    346           *
    347           * @return  none
    348           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    349          void SampleApp_HandleKeys( uint8 shift, uint8 keys )
   \                     SampleApp_HandleKeys:
    350          {
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 0
   \   000005   EA           MOV     A,R2
   \   000006   FE           MOV     R6,A
    351            (void)shift;  // Intentionally unreferenced parameter
    352            
    353            if ( keys & HAL_KEY_SW_1 )
   \   000007   A2E0         MOV     C,0xE0 /* A   */.0
   \   000009   5007         JNC     ??SampleApp_HandleKeys_0
    354            {
    355              /* This key sends the Flash Command is sent to Group 1.
    356               * This device will not receive the Flash Command from this
    357               * device (even if it belongs to group 1).
    358               */
    359              SampleApp_SendFlashMessage( SAMPLEAPP_FLASH_DURATION );
   \   00000B                ; Setup parameters for call to function SampleApp_SendFlashMessage
   \   00000B   7AE8         MOV     R2,#-0x18
   \   00000D   7B03         MOV     R3,#0x3
   \   00000F   12....       LCALL   ??SampleApp_SendFlashMessage?relay
    360            }
    361          
    362            if ( keys & HAL_KEY_SW_2 )
   \                     ??SampleApp_HandleKeys_0:
   \   000012   EE           MOV     A,R6
   \   000013   A2E1         MOV     C,0xE0 /* A   */.1
   \   000015   5024         JNC     ??SampleApp_HandleKeys_1
    363            {
    364              /* The Flashr Command is sent to Group 1.
    365               * This key toggles this device in and out of group 1.
    366               * If this device doesn't belong to group 1, this application
    367               * will not receive the Flash command sent to group 1.
    368               */
    369              aps_Group_t *grp;
    370              grp = aps_FindGroup( SAMPLEAPP_ENDPOINT, SAMPLEAPP_FLASH_GROUP );
    371              if ( grp )
   \   000017                ; Setup parameters for call to function aps_FindGroup
   \   000017   7A01         MOV     R2,#0x1
   \   000019   7B00         MOV     R3,#0x0
   \   00001B   7914         MOV     R1,#0x14
   \   00001D   12....       LCALL   ??aps_FindGroup?relay
   \   000020   8B..         MOV     ?V0 + 1,R3
   \   000022   EA           MOV     A,R2
   \   000023   45..         ORL     A,?V0 + 1
   \   000025   600B         JZ      ??SampleApp_HandleKeys_2
    372              {
    373                // Remove from the group
    374                aps_RemoveGroup( SAMPLEAPP_ENDPOINT, SAMPLEAPP_FLASH_GROUP );
   \   000027                ; Setup parameters for call to function aps_RemoveGroup
   \   000027   7A01         MOV     R2,#0x1
   \   000029   7B00         MOV     R3,#0x0
   \   00002B   7914         MOV     R1,#0x14
   \   00002D   12....       LCALL   ??aps_RemoveGroup?relay
   \   000030   8009         SJMP    ??SampleApp_HandleKeys_1
    375              }
    376              else
    377              {
    378                // Add to the flash group
    379                aps_AddGroup( SAMPLEAPP_ENDPOINT, &SampleApp_Group );
   \                     ??SampleApp_HandleKeys_2:
   \   000032                ; Setup parameters for call to function aps_AddGroup
   \   000032   7A..         MOV     R2,#SampleApp_Group & 0xff
   \   000034   7B..         MOV     R3,#(SampleApp_Group >> 8) & 0xff
   \   000036   7914         MOV     R1,#0x14
   \   000038   12....       LCALL   ??aps_AddGroup?relay
    380              }
    381            }
    382          }
   \                     ??SampleApp_HandleKeys_1:
   \   00003B   02....       LJMP    ??Subroutine2_0 & 0xFFFF
    383          
    384          /*********************************************************************
    385           * LOCAL FUNCTIONS
    386           */
    387          
    388          /*********************************************************************
    389           * @fn      SampleApp_SendFlashMessage
    390           *
    391           * @brief   Send the flash message to group 1.
    392           *
    393           * @param   flashTime - in milliseconds
    394           *
    395           * @return  none
    396           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    397          void SampleApp_SendFlashMessage( uint16 flashTime )
   \                     SampleApp_SendFlashMessage:
    398          {
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 3
   \   000005   74FD         MOV     A,#-0x3
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
    399            uint8 buffer[3];
    400            buffer[0] = (uint8)(SampleAppFlashCounter++);
   \   00000A   90....       MOV     DPTR,#SampleAppFlashCounter
   \   00000D   E0           MOVX    A,@DPTR
   \   00000E   85..82       MOV     DPL,?XSP + 0
   \   000011   85..83       MOV     DPH,?XSP + 1
   \   000014   F0           MOVX    @DPTR,A
   \   000015   90....       MOV     DPTR,#SampleAppFlashCounter
   \   000018   E0           MOVX    A,@DPTR
   \   000019   04           INC     A
   \   00001A   F0           MOVX    @DPTR,A
    401            buffer[1] = LO_UINT16( flashTime );
   \   00001B   7401         MOV     A,#0x1
   \   00001D   12....       LCALL   ?XSTACK_DISP0_8
   \   000020   EA           MOV     A,R2
   \   000021   F0           MOVX    @DPTR,A
    402            buffer[2] = HI_UINT16( flashTime );
   \   000022   7402         MOV     A,#0x2
   \   000024   12....       LCALL   ?XSTACK_DISP0_8
   \   000027   EB           MOV     A,R3
   \   000028   F0           MOVX    @DPTR,A
    403          
    404            if ( AF_DataRequest( &SampleApp_Flash_DstAddr, &SampleApp_epDesc,
    405                                 SAMPLEAPP_FLASH_CLUSTERID,
    406                                 3,
    407                                 buffer,
    408                                 &SampleApp_TransID,
    409                                 AF_DISCV_ROUTE,
    410                                 AF_DEFAULT_RADIUS ) == afStatus_SUCCESS )
   \   000029                ; Setup parameters for call to function AF_DataRequest
   \   000029   75..1E       MOV     ?V0 + 0,#0x1e
   \   00002C   78..         MOV     R0,#?V0 + 0
   \   00002E   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000031   75....       MOV     ?V0 + 0,#SampleApp_TransID & 0xff
   \   000034   75....       MOV     ?V0 + 1,#(SampleApp_TransID >> 8) & 0xff
   \   000037   78..         MOV     R0,#?V0 + 0
   \   000039   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00003C   7403         MOV     A,#0x3
   \   00003E   12....       LCALL   ?XSTACK_DISP0_8
   \   000041   8582..       MOV     ?V0 + 0,DPL
   \   000044   8583..       MOV     ?V0 + 1,DPH
   \   000047   78..         MOV     R0,#?V0 + 0
   \   000049   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00004C   75..03       MOV     ?V0 + 0,#0x3
   \   00004F   75..00       MOV     ?V0 + 1,#0x0
   \   000052   78..         MOV     R0,#?V0 + 0
   \   000054   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000057   75..02       MOV     ?V0 + 0,#0x2
   \   00005A   78..         MOV     R0,#?V0 + 0
   \   00005C   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00005F   7920         MOV     R1,#0x20
   \   000061   7C..         MOV     R4,#SampleApp_epDesc & 0xff
   \   000063   7D..         MOV     R5,#(SampleApp_epDesc >> 8) & 0xff
   \   000065   7A..         MOV     R2,#SampleApp_Flash_DstAddr & 0xff
   \   000067   7B..         MOV     R3,#(SampleApp_Flash_DstAddr >> 8) & 0xff
   \   000069   12....       LCALL   ??AF_DataRequest?relay
   \   00006C   7409         MOV     A,#0x9
   \   00006E   12....       LCALL   ?DEALLOC_XSTACK8
    411            {
    412            }
    413            else
    414            {
    415              // Error occurred in request to send.
    416            }
    417          }
   \   000071   7403         MOV     A,#0x3
   \   000073   02....       LJMP    ?Subroutine0 & 0xFFFF

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??SampleApp_SendPeriodicMessage?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    SampleApp_SendPeriodicMessage

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??SampleApp_MessageMSGCB?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    SampleApp_MessageMSGCB

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??SampleApp_Init?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    SampleApp_Init

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??SampleApp_ProcessEvent?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    SampleApp_ProcessEvent

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??SampleApp_HandleKeys?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    SampleApp_HandleKeys

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??SampleApp_SendFlashMessage?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    SampleApp_SendFlashMessage

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "I get data\\n">`:
   \   000000   49206765     DB "I get data\012"
   \            74206461
   \            74610A00

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "E\\n">`:
   \   000000   450A00       DB "E\012"

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Hello IGreen\\n">`:
   \   000000   48656C6C     DB "Hello IGreen\012"
   \            6F204947
   \            7265656E
   \            0A00    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Group 1">`:
   \   000000   47726F75     DB "Group 1"
   \            70203100

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "SampleApp">`:
   \   000000   53616D70     DB "SampleApp"
   \            6C654170
   \            7000    

   Maximum stack usage in bytes:

     Function                       ISTACK PSTACK XSTACK
     --------                       ------ ------ ------
     SampleApp_HandleKeys               0      0     22
       -> SampleApp_SendFlashMessage
                                        0      0     20
       -> aps_FindGroup                 0      0     20
       -> aps_RemoveGroup               0      0     20
       -> aps_AddGroup                  0      0     20
     SampleApp_Init                     0      0     14
       -> MT_UartInit                   0      0     22
       -> MT_UartRegisterTaskID         0      0     22
       -> HalUARTWrite                  0      0     22
       -> readCoordinatorJumper         0      0     22
       -> ZDOInitDevice                 0      0     22
       -> afRegister                    0      0     22
       -> RegisterForKeys               0      0     22
       -> osal_memcpy                   0      0     28
       -> aps_AddGroup                  0      0     22
       -> HalLcdWriteString             0      0     22
     SampleApp_MessageMSGCB             0      0     22
       -> HalUARTWrite                  0      0     20
       -> HalUARTWrite                  0      0     20
       -> HalUARTWrite                  0      0     20
       -> HalLedBlink                   0      0     20
     SampleApp_ProcessEvent             0      0     12
       -> osal_msg_receive              0      0     24
       -> osal_start_timerEx            0      0     24
       -> osal_msg_deallocate           0      0     24
       -> osal_msg_receive              0      0     24
       -> SampleApp_HandleKeys          0      0     24
       -> SampleApp_MessageMSGCB        0      0     24
       -> SampleApp_SendPeriodicMessage
                                        0      0     24
       -> osal_rand                     0      0     24
       -> osal_start_timerEx            0      0     24
     SampleApp_SendFlashMessage         1      0     32
       -> AF_DataRequest                0      0     44
     SampleApp_SendPeriodicMessage      1      0     36
       -> DHT11                         0      0     30
       -> AF_DataRequest                0      0     48


   Segment part sizes:

     Function/Label                        Bytes
     --------------                        -----
     P0SEL                                    1
     SampleApp_ClusterList                    4
     SampleApp_SimpleDesc                    12
     SampleApp_epDesc                         6
     SampleApp_TaskID                         1
     SampleApp_NwkState                       1
     SampleApp_TransID                        1
     SampleApp_Periodic_DstAddr              12
     SampleApp_Flash_DstAddr                 12
     SampleApp_Group                         18
     SampleAppPeriodicCounter                 1
     SampleAppFlashCounter                    1
     SampleApp_SendPeriodicMessage          159
     ?Subroutine0                             3
     ??Subroutine2_0                          5
     SampleApp_MessageMSGCB                 135
     ?Subroutine1                            12
     SampleApp_Init                         206
     SampleApp_ProcessEvent                 181
     SampleApp_HandleKeys                    62
     SampleApp_SendFlashMessage             118
     ??SampleApp_SendPeriodicMessage?relay    6
     ??SampleApp_MessageMSGCB?relay           6
     ??SampleApp_Init?relay                   6
     ??SampleApp_ProcessEvent?relay           6
     ??SampleApp_HandleKeys?relay             6
     ??SampleApp_SendFlashMessage?relay       6
     ?<Constant "I get data\n">              12
     ?<Constant "E\n">                        3
     ?<Constant "Hello IGreen\n">            14
     ?<Constant "Group 1">                    8
     ?<Constant "SampleApp">                 10

 
 881 bytes in segment BANKED_CODE
  36 bytes in segment BANK_RELAYS
   1 byte  in segment SFR_AN
  63 bytes in segment XDATA_ROM_C
  53 bytes in segment XDATA_Z
 
 917 bytes of CODE  memory
  63 bytes of CONST memory
   0 bytes of DATA  memory (+ 1 byte shared)
  53 bytes of XDATA memory

Errors: none
Warnings: 1
